"""
This type stub file was generated by pyright.
"""

"""Server API.

This module current"""
import socket
from typing import Callable
from typing_extensions import Literal


logger = ...
def ServerClass(cls):
    """Decorate classes with for method"""
    ...

__FILE__ = ...
class OSCThreadServer:
    """A thread-based OSC server.

    """
    def __init__(self, drop_late_bundles=..., timeout=..., advanced_matching=..., encoding=..., encoding_errors=..., default_handler=..., intercept_errors=...) -> None:
        ...
    
    def bind(self, address : bytes, callback : Callable[..., None], sock : socket.socket =..., get_address : bool =...) -> None: ...
    
    def create_smart_address(self, address): # -> tuple[Pattern[Unknown], ...]:
        ...
    
    def unbind(self, address, callback, sock=...): # -> None:
        ...
    
    def listen(self, address : str =..., port : int =..., default : bool =..., family : Literal['inet', 'unix'] =...) -> socket.socket:
        ...
    
    def close(self, sock=...): # -> None:
        ...
    
    def getaddress(self, sock=...): # -> _RetAddress:

        ...
    
    def stop(self, s=...): # -> None:
        ...
    
    def stop_all(self): # -> None:
        ...
    
    def terminate_server(self): # -> None:
        ...
    
    def join_server(self, timeout=...): # -> bool:
        ...
    
    def send_message(self, osc_address, values, ip_address, port, sock=..., safer=...):
        ...
    
    def send_bundle(self, messages, ip_address, port, timetag=..., sock=..., safer=...): # -> Stats:
        ...
    
    def get_sender(self): # -> tuple[Any | None, Any | Unknown, Any | Unknown]:
        ...
    
    def answer(self, address=..., values=..., bundle=..., timetag=..., safer=..., port=...): # -> Stats:
        ...
    
    def address(self, address, sock=..., get_address=...): # -> (callback: Unknown) -> Unknown:
        ...
    
    def address_method(self, address, sock=..., get_address=...): # -> (decorated: Unknown) -> Unknown:
        ...
    
    def bind_meta_routes(self, sock=...): # -> None:
        ...
    


