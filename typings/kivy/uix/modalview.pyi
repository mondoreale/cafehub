"""
This type stub file was generated by pyright.
"""

from kivy.uix.anchorlayout import AnchorLayout

"""
ModalView
=========

.. version"""
__all__ = ('ModalView', )
class ModalView(AnchorLayout):
    """ModalView class. See module docu"""
    auto_dismiss = ...
    attach_to = ...
    background_color = ...
    background = ...
    border = ...
    overlay_color = ...
    _anim_alpha = ...
    _anim_duration = ...
    _window = ...
    _is_open = ...
    _touch_started_inside = ...
    __events__ = ...
    def __init__(self, **kwargs) -> None:
        ...
    
    def open(self, *_args, **kwargs): # -> None:
        """Display the modal in the Window."""
        ...
    
    def dismiss(self, *_args, **kwargs): # -> None:
        """ Close the view if it is open.

"""
        ...
    
    def on_motion(self, etype, me): # -> Literal[True]:
        ...
    
    def on_touch_down(self, touch): # -> Literal[True]:
        """ touch down event handler. """
        ...
    
    def on_touch_move(self, touch): # -> Literal[True]:
        """ touch moved event handler. """
        ...
    
    def on_touch_up(self, touch): # -> Literal[True]:
        """ touch up event handler. """
        ...
    
    def on__anim_alpha(self, _instance, value): # -> None:
        """ animation progress callback. """
        ...
    
    def on_pre_open(self): # -> None:
        """ default pre-open event handler."""
        ...
    
    def on_open(self): # -> None:
        """ default open event handler. """
        ...
    
    def on_pre_dismiss(self): # -> None:
        """ default pre-dismiss event handl"""
        ...
    
    def on_dismiss(self): # -> None:
        """ default dismiss event handler. """
        ...
    


if __name__ == '__main__':
    content = ...
    view = ...
    layout = ...
