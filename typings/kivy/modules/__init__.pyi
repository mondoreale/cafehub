"""
This type stub file was generated by pyright.
"""

import kivy
import os
import sys
from kivy.config import Config
from kivy.logger import Logger

'''
Modules
=======

Modules are cl'''
__all__ = ('Modules', )
class ModuleContext:
    '''Context of a module

    You can'''
    def __init__(self) -> None:
        ...
    
    def __repr__(self): # -> str:
        ...
    


class ModuleBase:
    '''Handle Kivy modules. It will aut'''
    def __init__(self, **kwargs) -> None:
        ...
    
    def add_path(self, path): # -> None:
        '''Add a path to search for modules'''
        ...
    
    def list(self): # -> dict[Unknown, Unknown]:
        '''Return the list of available mod'''
        ...
    
    def import_module(self, name): # -> None:
        ...
    
    def activate_module(self, name, win): # -> None:
        '''Activate a module on a window'''
        ...
    
    def deactivate_module(self, name, win): # -> None:
        '''Deactivate a module from a windo'''
        ...
    
    def register_window(self, win): # -> None:
        '''Add the window to the window lis'''
        ...
    
    def unregister_window(self, win): # -> None:
        '''Remove the window from the windo'''
        ...
    
    def update(self): # -> None:
        '''Update the status of the module '''
        ...
    
    def configure(self): # -> None:
        '''(internal) Configure all the mod'''
        ...
    
    def usage_list(self): # -> None:
        ...
    


Modules = ...
if 'KIVY_DOC' not in os.environ:
    ...
if __name__ == '__main__':
    ...
