import logging
from typing import Dict
from typing_extensions import Protocol

# class T_Logger(Protocol):
#     def info(self, s : str) -> None: ...
#     def debug(self, s : str) -> None: ...
#     def warning(self, s : str) -> None: ...
#     def error(self, s : str) -> None: ...
#     def critical(self, s : str) -> None: ...
#     def trace(self, s : str) -> None: ...
#     def setLevel(self, l : int) -> None: ...

class KivyLogger(logging.Logger): ...

Logger: KivyLogger

LOG_LEVELS : Dict[str, int] = {
    'trace': 9,
    'debug': logging.DEBUG,
    'info': logging.INFO,
    'warning': logging.WARNING,
    'error': logging.ERROR,
    'critical': logging.CRITICAL
}
