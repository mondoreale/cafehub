"""
This type stub file was generated by pyright.
"""

from typing import Any
from kivy.event import EventDispatcher
from config import ConfigParser
from uix.settings import SettingsWithSpinner

from uix.widget import Widget

'''
Application
===========

The :c'''
__all__ = ('App', 'runTouchApp', 'async_runTouchApp', 'stopTouchApp')
class App(EventDispatcher):
    # title = ...
    # icon = ...
    # use_kivy_settings = ...
    # settings_cls = ...
    # kv_directory = ...
    # kv_file = ...
    # _running_app = ...
    # __events__ = ...
    # _user_data_dir = ...
    def __init__(self, **kwargs : Any) -> None: ...
    def build(self) -> Widget | None: ...
    def build_config(self, config) -> None: ...
    def build_settings(self, settings) -> None: ...
    def load_kv(self, filename : str =...) -> None: ...
    def get_application_name(self) -> str: ...
    def get_application_icon(self) -> str:  ...
    def get_application_config(self, defaultpath : str =...) -> str: ...
    
    @property
    def root_window(self) -> None:
        ...
    
    def load_config(self) -> ConfigParser | None:
        ...
    
    @property
    def directory(self) -> str:
        ...
    
    @property
    def user_data_dir(self) -> str:
        ...
    
    @property
    def name(self) -> str:
        ...
    
    def run(self) -> None:
        ...
    
    async def async_run(self, async_lib=...) -> None:
        ...
    
    def stop(self, *largs : Any) -> None:
        ...
    
    def on_start(self) -> None:
        ...
    
    def on_stop(self) -> None:
        ...
    
    def on_pause(self) -> bool:
        ...
    
    def on_resume(self) -> None:
        ...
    
    @staticmethod
    def get_running_app() -> App | None:
        ...
    
    def on_config_change(self, config, section, key, value) -> None:
        ...
    
    def open_settings(self, *largs) -> bool:
        ...
    
    def display_settings(self, settings) -> bool:
        ...
    
    def close_settings(self, *largs) -> bool | None:
        ...
    
    def create_settings(self) -> SettingsWithSpinner | Any :
        ...
    
    def destroy_settings(self) -> None:
        ...
    
    def on_title(self, instance, title) -> None:
        ...
    
    def on_icon(self, instance, icon) -> None:
        ...
    


