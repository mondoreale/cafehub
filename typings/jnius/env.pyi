"""
This type stub file was generated by pyright.
"""

from platform import machine

'''
This module determine and expos'''
log = ...
PY2 = ...
if PY2:
    ...
else:
    ...
machine = ...
MACHINE2CPU = ...
DEFAULT_PLATFORM = ...
def is_set(string): # -> bool:
    ...

def get_java_setup(platform=...): # -> AndroidJavaLocation | WindowsJavaLocation | MacOsXJavaLocation | UnixJavaLocation:
    '''
        Returns an instance of '''
    ...

class JavaLocation:
    def __init__(self, platform, home) -> None:
        ...
    
    def get_javahome(self): # -> Unknown:
        '''
            Returns the locatio'''
        ...
    
    def is_jdk(self): # -> bool:
        '''
            Returns true if the'''
        ...
    
    def get_javac(self): # -> str:
        '''
            Returns absolute pa'''
        ...
    
    def get_include_dirs(self): # -> list[str | None]:
        '''
            Returns a list of a'''
        ...
    
    def get_library_dirs(self): # -> None:
        '''
            Returns a list of a'''
        ...
    
    def get_libraries(self): # -> None:
        '''
            Returns the names o'''
        ...
    
    def get_jnius_lib_location(self): # -> str:
        '''
            Returns the full pa'''
        ...
    


class WindowsJavaLocation(JavaLocation):
    def get_javac(self): # -> str:
        ...
    
    def get_libraries(self): # -> list[str]:
        ...
    
    def get_library_dirs(self): # -> list[str]:
        ...
    


class UnixJavaLocation(JavaLocation):
    ...


class MacOsXJavaLocation(UnixJavaLocation):
    def get_include_dirs(self): # -> list[str] | list[str | None]:
        ...
    


class AndroidJavaLocation(UnixJavaLocation):
    def get_libraries(self): # -> list[str]:
        ...
    
    def get_library_dirs(self): # -> list[Unknown]:
        ...
    


def get_jre_home(platform): # -> str | None:
    ...

def get_jdk_home(platform): # -> str | None:
    ...

def get_osx_framework(): # -> str | bytes:
    ...

def get_cpu(): # -> str | (() -> str):
    ...

