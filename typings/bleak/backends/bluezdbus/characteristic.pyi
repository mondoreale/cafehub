"""
This type stub file was generated by pyright.
"""

from uuid import UUID
from typing import List, Union
from bleak.backends.characteristic import BleakGATTCharacteristic
from bleak.backends.descriptor import BleakGATTDescriptor

_GattCharacteristicsFlagsEnum = ...
class BleakGATTCharacteristicBlueZDBus(BleakGATTCharacteristic):
    """GATT Characteristic implementati"""
    def __init__(self, obj: dict, object_path: str, service_uuid: str, service_handle: int) -> None:
        ...
    
    @property
    def service_uuid(self) -> str:
        """The uuid of the Service containi"""
        ...
    
    @property
    def service_handle(self) -> int:
        """The handle of the Service contai"""
        ...
    
    @property
    def handle(self) -> int:
        """The handle of this characteristi"""
        ...
    
    @property
    def uuid(self) -> str:
        """The uuid of this characteristic"""
        ...
    
    @property
    def properties(self) -> List:
        """Properties of this characteristi"""
        ...
    
    @property
    def descriptors(self) -> List:
        """List of descriptors for this ser"""
        ...
    
    def get_descriptor(self, specifier: Union[int, str, UUID]) -> Union[BleakGATTDescriptor, None]:
        """Get a descriptor by handle (int)"""
        ...
    
    def add_descriptor(self, descriptor: BleakGATTDescriptor): # -> None:
        """Add a :py:class:`~BleakGATTDescr"""
        ...
    
    @property
    def path(self) -> str:
        """The DBus path. Mostly needed by """
        ...
    


