"""
This type stub file was generated by pyright.
"""

from typing import Any, Coroutine, Optional
from dbus_next.aio.message_bus import MessageBus
from dbus_next.message import Message

_message_types = ...
class InvalidMessageTypeError(TypeError):
    def __init__(self, type) -> None:
        ...
    


def is_message_type_valid(type: str) -> bool:
    """Whether this is a valid message """
    ...

def assert_bus_name_valid(type: str): # -> None:
    """Raise an error if this is not a """
    ...

class MatchRules:
    """D-Bus signal match rules.

    ."""
    def __init__(self, type: str = ..., sender: Optional[str] = ..., interface: Optional[str] = ..., member: Optional[str] = ..., path: Optional[str] = ..., path_namespace: Optional[str] = ..., destination: Optional[str] = ..., arg0namespace: Optional[str] = ..., **kwargs) -> None:
        ...
    
    @staticmethod
    def parse(rules: str): # -> MatchRules:
        ...
    
    def __str__(self) -> str:
        ...
    
    def __repr__(self) -> str:
        ...
    


def add_match(bus: MessageBus, rules: MatchRules) -> Coroutine[Any, Any, Message]:
    """Calls org.freedesktop.DBus.AddMa"""
    ...

def remove_match(bus: MessageBus, rules: MatchRules) -> Coroutine[Any, Any, Message]:
    """Calls org.freedesktop.DBus.Remov"""
    ...

