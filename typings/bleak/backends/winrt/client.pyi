"""
This type stub file was generated by pyright.
"""

import uuid
from typing import Callable, Union
from bleak.backends.device import BLEDevice
from bleak.backends.client import BaseBleakClient
from bleak.backends.characteristic import BleakGATTCharacteristic
from bleak.backends.service import BleakGATTServiceCollection

"""
BLE Client for Windows 10 syste"""
logger = ...
_ACCESS_DENIED_SERVICES = ...
_pairing_statuses = ...
_unpairing_statuses = ...
class BleakClientWinRT(BaseBleakClient):
    """Native Windows Bleak Client.

  """
    def __init__(self, address_or_ble_device: Union[BLEDevice, str], **kwargs) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    
    async def connect(self, **kwargs) -> bool:
        """Connect to the specified GATT se"""
        ...
    
    async def disconnect(self) -> bool:
        """Disconnect from the specified GA"""
        ...
    
    @property
    def is_connected(self) -> bool:
        """Check connection status between """
        ...
    
    @property
    def mtu_size(self) -> int:
        """Get ATT MTU size for active conn"""
        ...
    
    async def pair(self, protection_level: int = ..., **kwargs) -> bool:
        """Attempts to pair with the device"""
        ...
    
    async def unpair(self) -> bool:
        """Attempts to unpair from the devi"""
        ...
    
    async def get_services(self, **kwargs) -> BleakGATTServiceCollection:
        """Get all services registered for """
        ...
    
    async def read_gatt_char(self, char_specifier: Union[BleakGATTCharacteristic, int, str, uuid.UUID], **kwargs) -> bytearray:
        """Perform read operation on the sp"""
        ...
    
    async def read_gatt_descriptor(self, handle: int, **kwargs) -> bytearray:
        """Perform read operation on the sp"""
        ...
    
    async def write_gatt_char(self, char_specifier: Union[BleakGATTCharacteristic, int, str, uuid.UUID], data: Union[bytes, bytearray, memoryview], response: bool = ...) -> None:
        """Perform a write operation of the"""
        ...
    
    async def write_gatt_descriptor(self, handle: int, data: Union[bytes, bytearray, memoryview]) -> None:
        """Perform a write operation on the"""
        ...
    
    async def start_notify(self, char_specifier: Union[BleakGATTCharacteristic, int, str, uuid.UUID], callback: Callable[[int, bytearray], None], **kwargs) -> None:
        """Activate notifications/indicatio"""
        ...
    
    async def stop_notify(self, char_specifier: Union[BleakGATTCharacteristic, int, str, uuid.UUID]) -> None:
        """Deactivate notification/indicati"""
        ...
    


